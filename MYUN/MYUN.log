2020-04-08 14:20:11 | INFO | CASA version: 5.4.2
2020-04-08 14:20:11 | INFO | Starting import vla data
2020-04-08 14:20:11 | INFO | Create directory: ./summary/
2020-04-08 14:20:11 | INFO | Input files: ['../../data/VLA/MYUN/MYUN_A970617.xp1', '../../data/VLA/MYUN/MYUN_A970617.xp2']
2020-04-08 14:20:11 | INFO | Output msfile: MYUN.ms
2020-04-08 14:20:11 | INFO | Executing command: importvla(archivefiles = ['../../data/VLA/MYUN/MYUN_A970617.xp1', '../../data/VLA/MYUN/MYUN_A970617.xp2'], vis = 'MYUN.ms')
2020-04-08 14:20:21 | INFO | Completed import vla data
2020-04-08 14:20:21 | INFO | Starting archive file summary.
2020-04-08 14:20:21 | INFO | To find the exact files imported here search the VLA archive (https://archive.nrao.edu/archive/advquery.jsp) for:
2020-04-08 14:20:21 | INFO | Project: MYUN	Start Time: 1997-06-17 15:27:45	End Time: 1997-06-17 16:09:30
2020-04-08 14:20:21 | INFO | Project: MYUN	Start Time: 1997-06-17 16:09:50	End Time: 1997-06-17 19:26:45
2020-04-08 14:20:21 | INFO | Completed archive file summary.
2020-04-08 14:20:21 | INFO | Starting listobs summary.
2020-04-08 14:20:21 | INFO | Writing listobs summary of data set to: ./summary/MYUN.ms.listobs.summary
2020-04-08 14:20:21 | INFO | Completed listobs summary.
2020-04-08 14:20:21 | INFO | Starting data transform.
2020-04-08 14:20:21 | INFO | No transformation made.
2020-04-08 14:20:21 | INFO | Reading ms file information for MS: MYUN.ms
2020-04-08 14:20:21 | INFO | Sources in MS MYUN.ms: 0134+329,0500+019,HCG31
2020-04-08 14:20:21 | INFO | > Sources (3): 0134+329,0500+019,HCG31
2020-04-08 14:20:21 | INFO | > Number of spw: 1
2020-04-08 14:20:21 | INFO | > Channels per spw: 63
2020-04-08 14:20:21 | INFO | Starting plotting elevation.
2020-04-08 14:20:21 | INFO | Create directory: ./plots/
2020-04-08 14:20:21 | INFO | Plotting elevation to: ./plots/MYUN.ms_elevation.png
2020-04-08 14:20:31 | INFO | Completed plotting elevation.
2020-04-08 14:20:31 | INFO | Starting plotting antenna positions.
2020-04-08 14:20:31 | INFO | Plotting antenna positions to: ./plots/MYUN.ms_antpos.png
2020-04-08 14:20:31 | INFO | Completed plotting antenna positions.
2020-04-08 14:20:31 | INFO | The parameters in MYUN_params.cfg have been modified during this pipeline step.
2020-04-08 14:20:31 | INFO | Deleted: diff_params.txt
2020-04-08 14:20:31 | INFO | The changes are as follows:
2020-04-08 14:20:31 | INFO | 55a56

2020-04-08 14:20:31 | INFO | > phasecenter =

2020-04-08 14:20:31 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 14:20:35 | INFO | CASA version: 5.4.2
2020-04-08 14:20:35 | INFO | Restoring flag version from: Original.
2020-04-08 14:20:35 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='restore', versionname='Original')
2020-04-08 14:20:35 | INFO | Completed restoring flag version.
2020-04-08 14:20:35 | INFO | Starting manual flagging.
2020-04-08 14:20:35 | INFO | Applying flags from manual_flags.list
2020-04-08 14:20:35 | WARNING | 'manual_flags.list' does not exist. Continuing without manual flagging.
2020-04-08 14:20:35 | INFO | Starting basic flagging.
2020-04-08 14:20:35 | INFO | Flagging antennae with more than 5.0 m of shadowing.
2020-04-08 14:20:35 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='shadow', tolerance=5.0, flagbackup=False)
2020-04-08 14:20:39 | INFO | Flagging zero amplitude data.
2020-04-08 14:20:39 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='clip', clipzeros=True, flagbackup=False)
2020-04-08 14:20:44 | INFO | Flagging first 5.0 s of every scan.
2020-04-08 14:20:44 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='quack', quackinterval=5.0, quackmode='beg', flagbackup=False)
2020-04-08 14:20:49 | INFO | Completed basic flagging.
2020-04-08 14:20:49 | INFO | Starting running TFCrop.
2020-04-08 14:20:49 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='tfcrop', action='apply', display='', timecutoff=4.0, freqcutoff=4.0, flagbackup=False)
2020-04-08 14:21:08 | INFO | Completed running TFCrop.
2020-04-08 14:21:08 | INFO | Removing flag version: initial.
2020-04-08 14:21:08 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='initial')
2020-04-08 14:21:08 | INFO | Completed removing flag version.
2020-04-08 14:21:08 | INFO | Saving flag version as: initial.
2020-04-08 14:21:08 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='initial')
2020-04-08 14:21:09 | INFO | Completed saving flag version.
2020-04-08 14:21:09 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.initialflags.summary.
2020-04-08 14:21:11 | INFO | Total flagged data: 9.76%
2020-04-08 14:21:11 | INFO | Completed writing flag summary.
2020-04-08 14:21:11 | INFO | Starting reference antenna selection.
2020-04-08 14:21:11 | INFO | Reference antenna already set as: VA27.
2020-04-08 14:21:11 | INFO | Starting set field purposes.
2020-04-08 14:21:11 | INFO | Target field(s) already set as: ['HCG31'].
2020-04-08 14:21:11 | INFO | Flux calibrator already set as: ['0134+329'].
2020-04-08 14:21:11 | INFO | Flux models already set as: ['3C48_L.im'].
2020-04-08 14:21:11 | INFO | Bandpass calibrator already set as: ['0134+329'].
2020-04-08 14:21:11 | INFO | Phase calibrator already set as: ['0500+019'].
2020-04-08 14:21:11 | INFO | No changes made to preset target and calibrator fields.
2020-04-08 14:21:11 | INFO | Completed setting field purposes.
2020-04-08 14:21:11 | INFO | Making flags plots for flag version: initial
2020-04-08 14:21:11 | INFO | Making flags plots for 0134+329.
2020-04-08 14:21:11 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0134+329_freq_ob0_spw0.png
2020-04-08 14:21:17 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0134+329_time_ob0_spw0.png
2020-04-08 14:21:26 | INFO | Making flags plots for 0134+329.
2020-04-08 14:21:26 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0134+329_freq_ob1_spw0.png
2020-04-08 14:21:29 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0134+329_time_ob1_spw0.png
2020-04-08 14:21:29 | INFO | Making flags plots for 0500+019.
2020-04-08 14:21:29 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0500+019_freq_ob0_spw0.png
2020-04-08 14:21:31 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0500+019_time_ob0_spw0.png
2020-04-08 14:21:34 | INFO | Making flags plots for 0500+019.
2020-04-08 14:21:34 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0500+019_freq_ob1_spw0.png
2020-04-08 14:21:39 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0500+019_time_ob1_spw0.png
2020-04-08 14:21:45 | INFO | Making flags plots for HCG31.
2020-04-08 14:21:45 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_HCG31_freq_ob0_spw0.png
2020-04-08 14:21:50 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_HCG31_time_ob0_spw0.png
2020-04-08 14:21:53 | INFO | Making flags plots for HCG31.
2020-04-08 14:21:53 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_HCG31_freq_ob1_spw0.png
2020-04-08 14:22:06 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_HCG31_time_ob1_spw0.png
2020-04-08 14:22:17 | INFO | Completed flags plots 
2020-04-08 14:22:17 | INFO | Starting calibration.
2020-04-08 14:22:17 | INFO | Create directory: ./cal_tabs/
2020-04-08 14:22:18 | INFO | Calibrating gain vs elevation(./cal_tabs/gaincurve.cal).
2020-04-08 14:22:18 | INFO | Executing command: gencal(vis='MYUN.ms', caltable='./cal_tabs/gaincurve.cal', caltype='gceff')
2020-04-08 14:22:18 | INFO | Load model for flux calibrator 0134+329 (3C48_L.im).
2020-04-08 14:22:18 | INFO | Executing command: setjy(vis='MYUN.ms', field='0134+329', scalebychan=True, model='3C48_L.im')
2020-04-08 14:22:19 | INFO | Plotting bandpass phase vs. time for reference antenna to: ./plots/bpphaseint.png
2020-04-08 14:22:21 | INFO | Calibrating delays for bandpass calibrators ['0134+329'] (./cal_tabs/delays.cal).
2020-04-08 14:22:21 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329', caltable='./cal_tabs/delays.cal', refant='VA27', gaintype='K', gaintable=['./cal_tabs/gaincurve.cal'], spw='0')
2020-04-08 14:22:23 | INFO | Make bandpass calibrator phase solutions for ['0134+329'] (./cal_tabs/bpphase.gcal).
2020-04-08 14:22:23 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329',  caltable='./cal_tabs/bpphase.gcal', refant='VA27', calmode='p', solint='int', combine='', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal','./cal_tabs/delays.cal'], spw='0')
2020-04-08 14:22:28 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob0.png
2020-04-08 14:22:29 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob1.png
2020-04-08 14:22:30 | INFO | Determining bandpass solution(s) (./cal_tabs/bandpass.bcal).
2020-04-08 14:22:30 | INFO | Executing command: bandpass(vis='MYUN.ms', caltable='./cal_tabs/bandpass.bcal', field='0134+329', refant='VA27', solint='inf', solnorm=True, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bpphase.gcal'], spw='0')
2020-04-08 14:22:33 | INFO | Plotting bandpass amplitude solutions to: ./plots/bandpasssol_.png
2020-04-08 14:22:34 | INFO | Determining integration phase solutions (./cal_tabs/intphase.gcal).
2020-04-08 14:22:34 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/intphase.gcal', refant='VA27', calmode='p', solint='int', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 14:22:42 | INFO | Determining scan phase solutions (./cal_tabs/scanphase.gcal).
2020-04-08 14:22:42 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/scanphase.gcal', refant='VA27', calmode='p', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 14:22:47 | INFO | Determining amplitude solutions (./cal_tabs/amp.gcal).
2020-04-08 14:22:47 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/amp.gcal', refant='VA27', calmode='ap', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal'],spw='0')
2020-04-08 14:22:52 | INFO | Plotting phase solutions to: ./plots/phasesol_ob0.png
2020-04-08 14:22:53 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob0.png
2020-04-08 14:22:55 | INFO | Plotting phase solutions to: ./plots/phasesol_ob1.png
2020-04-08 14:22:56 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob1.png
2020-04-08 14:22:58 | INFO | Applying flux scale to calibrators (./cal_tabs/fluxsol.cal).
2020-04-08 14:22:58 | INFO | Executing command: flux_info = fluxscale(vis='MYUN.ms', caltable='./cal_tabs/amp.gcal', fluxtable='./cal_tabs/fluxsol.cal', reference='0134+329', incremental=True)
2020-04-08 14:22:58 | INFO | Writing calibrator fluxes summary to: ./summary/MYUN.ms.flux.summary.
2020-04-08 14:22:58 | INFO | Apply all calibrations to bandpass and flux calibrators.
2020-04-08 14:22:58 | INFO | Applying calibration to: 0134+329
2020-04-08 14:22:58 | INFO | Executing command: applycal(vis='MYUN.ms', field='0134+329', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal'], gainfield=['', '0134+329', '0134+329', '0134+329', '0134+329'], calwt=False)
2020-04-08 14:23:00 | INFO | Plotting corrected phases for ['0134+329'] to: ./plots/corr_phase.png
2020-04-08 14:23:02 | INFO | Plotting corrected amplitudes for ['0134+329'] to: ./plots/corr_amp.png
2020-04-08 14:23:03 | INFO | Apply all calibrations to phase calibrators and targets.
2020-04-08 14:23:03 | INFO | Applying calibration to: 0500+019
2020-04-08 14:23:03 | INFO | Executing command: applycal(vis='MYUN.ms', field='0500+019', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 14:23:06 | INFO | Applying calibration to: HCG31
2020-04-08 14:23:06 | INFO | Executing command: applycal(vis='MYUN.ms', field='HCG31', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 14:23:12 | INFO | Completed calibration.
2020-04-08 14:23:12 | INFO | Starting running rflag with a threshold of 4.0.
2020-04-08 14:23:12 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='rflag', action='apply', datacolumn='corrected', freqdevscale=4.0, timedevscale=4.0, display='', flagbackup=False)
2020-04-08 14:23:45 | INFO | Completed running rflag.
2020-04-08 14:23:45 | INFO | Removing flag version: rflag.
2020-04-08 14:23:45 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='rflag')
2020-04-08 14:23:45 | INFO | Completed removing flag version.
2020-04-08 14:23:45 | INFO | Saving flag version as: rflag.
2020-04-08 14:23:45 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='rflag')
2020-04-08 14:23:45 | INFO | Completed saving flag version.
2020-04-08 14:23:45 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.rflagflags.summary.
2020-04-08 14:23:47 | INFO | Total flagged data: 17.75%
2020-04-08 14:23:47 | INFO | Completed writing flag summary.
2020-04-08 14:23:47 | INFO | Starting extending existing flags.
2020-04-08 14:23:47 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='extend', spw='', extendpols=True, action='apply', display='', flagbackup=False)
2020-04-08 14:23:51 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='extend', spw='', growtime=75.0, growfreq=90.0, action='apply', display='', flagbackup=False)
2020-04-08 14:23:55 | INFO | Completed extending existing flags.
2020-04-08 14:23:55 | INFO | Removing flag version: extended.
2020-04-08 14:23:55 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='extended')
2020-04-08 14:23:55 | INFO | Completed removing flag version.
2020-04-08 14:23:55 | INFO | Saving flag version as: extended.
2020-04-08 14:23:55 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='extended')
2020-04-08 14:23:55 | INFO | Completed saving flag version.
2020-04-08 14:23:55 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.extendedflags.summary.
2020-04-08 14:23:57 | INFO | Total flagged data: 18.21%
2020-04-08 14:23:57 | INFO | Completed writing flag summary.
2020-04-08 14:23:57 | INFO | Starting calibration.
2020-04-08 14:23:58 | INFO | Calibrating gain vs elevation(./cal_tabs/gaincurve.cal).
2020-04-08 14:23:58 | INFO | Executing command: gencal(vis='MYUN.ms', caltable='./cal_tabs/gaincurve.cal', caltype='gceff')
2020-04-08 14:23:58 | INFO | Load model for flux calibrator 0134+329 (3C48_L.im).
2020-04-08 14:23:58 | INFO | Executing command: setjy(vis='MYUN.ms', field='0134+329', scalebychan=True, model='3C48_L.im')
2020-04-08 14:23:59 | INFO | Plotting bandpass phase vs. time for reference antenna to: ./plots/bpphaseint.png
2020-04-08 14:24:01 | INFO | Calibrating delays for bandpass calibrators ['0134+329'] (./cal_tabs/delays.cal).
2020-04-08 14:24:01 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329', caltable='./cal_tabs/delays.cal', refant='VA27', gaintype='K', gaintable=['./cal_tabs/gaincurve.cal'], spw='0')
2020-04-08 14:24:03 | INFO | Make bandpass calibrator phase solutions for ['0134+329'] (./cal_tabs/bpphase.gcal).
2020-04-08 14:24:03 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329',  caltable='./cal_tabs/bpphase.gcal', refant='VA27', calmode='p', solint='int', combine='', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal','./cal_tabs/delays.cal'], spw='0')
2020-04-08 14:24:07 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob0.png
2020-04-08 14:24:09 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob1.png
2020-04-08 14:24:10 | INFO | Determining bandpass solution(s) (./cal_tabs/bandpass.bcal).
2020-04-08 14:24:10 | INFO | Executing command: bandpass(vis='MYUN.ms', caltable='./cal_tabs/bandpass.bcal', field='0134+329', refant='VA27', solint='inf', solnorm=True, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bpphase.gcal'], spw='0')
2020-04-08 14:24:13 | INFO | Plotting bandpass amplitude solutions to: ./plots/bandpasssol_.png
2020-04-08 14:24:15 | INFO | Determining integration phase solutions (./cal_tabs/intphase.gcal).
2020-04-08 14:24:15 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/intphase.gcal', refant='VA27', calmode='p', solint='int', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 14:24:23 | INFO | Determining scan phase solutions (./cal_tabs/scanphase.gcal).
2020-04-08 14:24:23 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/scanphase.gcal', refant='VA27', calmode='p', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 14:24:28 | INFO | Determining amplitude solutions (./cal_tabs/amp.gcal).
2020-04-08 14:24:28 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/amp.gcal', refant='VA27', calmode='ap', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal'],spw='0')
2020-04-08 14:24:33 | INFO | Plotting phase solutions to: ./plots/phasesol_ob0.png
2020-04-08 14:24:34 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob0.png
2020-04-08 14:24:36 | INFO | Plotting phase solutions to: ./plots/phasesol_ob1.png
2020-04-08 14:24:37 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob1.png
2020-04-08 14:24:38 | INFO | Applying flux scale to calibrators (./cal_tabs/fluxsol.cal).
2020-04-08 14:24:38 | INFO | Executing command: flux_info = fluxscale(vis='MYUN.ms', caltable='./cal_tabs/amp.gcal', fluxtable='./cal_tabs/fluxsol.cal', reference='0134+329', incremental=True)
2020-04-08 14:24:39 | INFO | Writing calibrator fluxes summary to: ./summary/MYUN.ms.flux.summary.
2020-04-08 14:24:39 | INFO | Apply all calibrations to bandpass and flux calibrators.
2020-04-08 14:24:39 | INFO | Applying calibration to: 0134+329
2020-04-08 14:24:39 | INFO | Executing command: applycal(vis='MYUN.ms', field='0134+329', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal'], gainfield=['', '0134+329', '0134+329', '0134+329', '0134+329'], calwt=False)
2020-04-08 14:24:41 | INFO | Plotting corrected phases for ['0134+329'] to: ./plots/corr_phase.png
2020-04-08 14:24:43 | INFO | Plotting corrected amplitudes for ['0134+329'] to: ./plots/corr_amp.png
2020-04-08 14:24:45 | INFO | Apply all calibrations to phase calibrators and targets.
2020-04-08 14:24:45 | INFO | Applying calibration to: 0500+019
2020-04-08 14:24:45 | INFO | Executing command: applycal(vis='MYUN.ms', field='0500+019', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 14:24:47 | INFO | Applying calibration to: HCG31
2020-04-08 14:24:47 | INFO | Executing command: applycal(vis='MYUN.ms', field='HCG31', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 14:24:53 | INFO | Completed calibration.
2020-04-08 14:24:53 | INFO | Removing flag version: final.
2020-04-08 14:24:53 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='final')
2020-04-08 14:24:54 | INFO | Completed removing flag version.
2020-04-08 14:24:54 | INFO | Saving flag version as: final.
2020-04-08 14:24:54 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='final')
2020-04-08 14:24:54 | INFO | Completed saving flag version.
2020-04-08 14:24:54 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.finalflags.summary.
2020-04-08 14:24:56 | INFO | Total flagged data: 18.30%
2020-04-08 14:24:56 | INFO | Completed writing flag summary.
2020-04-08 14:24:56 | INFO | Making flags plots for flag version: final
2020-04-08 14:24:56 | INFO | Making flags plots for 0134+329.
2020-04-08 14:24:56 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0134+329_freq_ob0_spw0.png
2020-04-08 14:25:02 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0134+329_time_ob0_spw0.png
2020-04-08 14:25:09 | INFO | Making flags plots for 0134+329.
2020-04-08 14:25:09 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0134+329_freq_ob1_spw0.png
2020-04-08 14:25:12 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0134+329_time_ob1_spw0.png
2020-04-08 14:25:12 | INFO | Making flags plots for 0500+019.
2020-04-08 14:25:12 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0500+019_freq_ob0_spw0.png
2020-04-08 14:25:15 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0500+019_time_ob0_spw0.png
2020-04-08 14:25:17 | INFO | Making flags plots for 0500+019.
2020-04-08 14:25:17 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0500+019_freq_ob1_spw0.png
2020-04-08 14:25:23 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0500+019_time_ob1_spw0.png
2020-04-08 14:25:31 | INFO | Making flags plots for HCG31.
2020-04-08 14:25:31 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_HCG31_freq_ob0_spw0.png
2020-04-08 14:25:37 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_HCG31_time_ob0_spw0.png
2020-04-08 14:25:40 | INFO | Making flags plots for HCG31.
2020-04-08 14:25:40 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_HCG31_freq_ob1_spw0.png
2020-04-08 14:25:57 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_HCG31_time_ob1_spw0.png
2020-04-08 14:26:12 | INFO | Completed flags plots 
2020-04-08 14:26:12 | INFO | Starting split fields.
2020-04-08 14:26:12 | INFO | Create directory: ./sources/
2020-04-08 14:26:12 | INFO | Splitting HCG31 into separate file: HCG31.split.
2020-04-08 14:26:12 | INFO | Executing command: split(vis='MYUN.ms', outputvis='sources/HCG31.split', field='HCG31')
2020-04-08 14:26:15 | INFO | Writing listobs summary for split data set to: ./summary/HCG31.listobs.summary
2020-04-08 14:26:15 | INFO | Completed split fields.
2020-04-08 14:26:15 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 14:26:19 | INFO | CASA version: 5.4.2
2020-04-08 14:26:19 | INFO | Starting making dirty continuum image.
2020-04-08 14:26:19 | INFO | Removing any existing dirty continuum images.
2020-04-08 14:26:19 | INFO | Checking clean parameters for dirty image (inc. continuum).
2020-04-08 14:26:19 | INFO | Pixel sizes set as: ['2arcsec'].
2020-04-08 14:26:19 | INFO | For the targets: ['HCG31'].
2020-04-08 14:26:19 | INFO | Image sizes set as: ['256'] pixels.
2020-04-08 14:26:19 | INFO | For the targets: ['HCG31'].
2020-04-08 14:26:19 | INFO | Making dirty image of HCG31 (inc. continuum).
2020-04-08 14:26:19 | INFO | Executing command: tclean(vis='sources/HCG31.split', field='HCG31', imagename='images/HCG31.cont.dirty', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', weighting='briggs', robust=2, niter=0, phasecenter='', interactive=False)
2020-04-08 14:27:03 | INFO | Completed making dirty continuum image.
2020-04-08 14:27:03 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 14:27:06 | INFO | CASA version: 5.4.2
2020-04-08 14:27:06 | INFO | Starting plotting amplitude spectrum.
2020-04-08 14:27:06 | INFO | Plotting amplitude vs channel to ./plots/HCG31_amp_chn.png
2020-04-08 14:27:20 | INFO | Plotting amplitude vs velocity to ./plots/HCG31_amp_vel.png
2020-04-08 14:27:43 | INFO | Completed plotting amplitude spectrum.
2020-04-08 14:27:43 | INFO | Starting continuum subtraction.
2020-04-08 14:27:43 | INFO | Checking for line free channel ranges in parameters.
2020-04-08 14:27:43 | INFO | Line free channels set as: ['0:1~5;54~59'].
2020-04-08 14:27:43 | INFO | Fit order(s) set as: 1.
2020-04-08 14:27:43 | INFO | For the targets: ['HCG31'].
2020-04-08 14:27:43 | INFO | Subtracting the continuum from field: HCG31
2020-04-08 14:27:43 | INFO | Executing command: uvcontsub(vis='sources/HCG31'+'.split', field='HCG31', fitspw='0:1~5;54~59', spw='0', excludechans=False, combine='spw', solint='int', fitorder=1, want_cont=False)
2020-04-08 14:28:09 | INFO | Completed continuum subtraction.
2020-04-08 14:28:09 | INFO | Starting plotting amplitude spectrum.
2020-04-08 14:28:09 | INFO | Plotting amplitude vs channel to ./plots/HCG31_contsub_amp_chn.png
2020-04-08 14:28:25 | INFO | Completed plotting amplitude spectrum.
2020-04-08 14:28:25 | INFO | Starting making dirty image.
2020-04-08 14:28:25 | INFO | Removing any existing dirty images.
2020-04-08 14:28:25 | INFO | Checking clean parameters for dirty image.
2020-04-08 14:28:25 | INFO | Pixel sizes set as: ['2arcsec'].
2020-04-08 14:28:25 | INFO | For the targets: ['HCG31'].
2020-04-08 14:28:25 | INFO | Image sizes set as: ['256'] pixels.
2020-04-08 14:28:25 | INFO | For the targets: ['HCG31'].
2020-04-08 14:28:25 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 14:28:25 | INFO | For the targets: ['HCG31'].
2020-04-08 14:28:25 | INFO | Making dirty image of HCG31 (line only).
2020-04-08 14:28:25 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', imagename='images/HCG31'+'.dirty', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', weighting='briggs', robust=2, restoringbeam='common', niter=0, phasecenter='', interactive=False)
2020-04-08 14:29:09 | INFO | Completed making dirty image.
2020-04-08 14:29:09 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 14:29:12 | INFO | CASA version: 5.4.2
2020-04-08 14:29:12 | INFO | Deleting any existing clean image(s).
2020-04-08 14:29:12 | INFO | Starting making noise estimation.
2020-04-08 14:29:14 | INFO | Effective integration time for HCG31: 9275 s
2020-04-08 14:29:14 | INFO | Expected rms noise for HCG31: 0.000585230676919 Jy/beam
2020-04-08 14:29:14 | INFO | Completed making noise estimation.
2020-04-08 14:29:14 | INFO | Starting generation of clean image(s).
2020-04-08 14:29:14 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 14:29:14 | INFO | For the targets: ['HCG31'].
2020-04-08 14:29:14 | INFO | Setting CLEAN algorithm to MS-CLEAN.
2020-04-08 14:29:14 | INFO | Starting HCG31 image.
2020-04-08 14:29:14 | INFO | Automasking parameters set as:
2020-04-08 14:29:14 | INFO | sidelobethreshold = 2.0
2020-04-08 14:29:14 | INFO | noisethreshold = 3.0
2020-04-08 14:29:14 | INFO | lownoisethreshold = 1.5
2020-04-08 14:29:14 | INFO | minbeamfraction = 0.3
2020-04-08 14:29:14 | INFO | negativethreshold = 15.0
2020-04-08 14:29:14 | INFO | The maximum recoverable scale for HCG31 is 471 arcsec.
2020-04-08 14:29:14 | WARNING | Some MS-CLEAN scale(s) is (are) larger than largest recoverable angular scales.
2020-04-08 14:29:14 | INFO | Removing offending scales.
2020-04-08 14:29:14 | INFO | CLEANing with scales of [0, 72, 216] pixels.
2020-04-08 14:29:14 | INFO | CLEANing HCG31 to a threshold of 0.0014630766923 Jy.
2020-04-08 14:29:14 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', spw='0:2~58', imagename='images/HCG31', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='multiscale', scales=[0, 72, 216], restoringbeam='common', pbcor=True, weighting='briggs', robust=2, niter=100000, gain=0.1, threshold='0.0014630766923Jy', usemask='auto-multithresh', phasecenter='', sidelobethreshold=2.0, noisethreshold=3.0, lownoisethreshold=1.5, minbeamfrac=0.3, negativethreshold=15.0, cyclefactor=2.0,interactive=False)
2020-04-08 14:30:34 | CRITICAL | There were severe errors in the CASA log:
2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:29:59	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:29:59	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:29:59	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:30:34 | CRITICAL | 2020-04-08 14:30:00	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 14:39:51 | INFO | CASA version: 5.4.2
2020-04-08 14:39:51 | INFO | Deleting any existing clean image(s).
2020-04-08 14:39:51 | INFO | Starting making noise estimation.
2020-04-08 14:39:52 | INFO | Effective integration time for HCG31: 9275 s
2020-04-08 14:39:52 | INFO | Expected rms noise for HCG31: 0.000585230676919 Jy/beam
2020-04-08 14:39:52 | INFO | Completed making noise estimation.
2020-04-08 14:39:52 | INFO | Starting generation of clean image(s).
2020-04-08 14:39:52 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 14:39:52 | INFO | For the targets: ['HCG31'].
2020-04-08 14:39:52 | INFO | Setting CLEAN algorithm to Hogbom.
2020-04-08 14:39:52 | INFO | Starting HCG31 image.
2020-04-08 14:39:52 | INFO | Automasking parameters set as:
2020-04-08 14:39:52 | INFO | sidelobethreshold = 2.0
2020-04-08 14:39:52 | INFO | noisethreshold = 3.0
2020-04-08 14:39:52 | INFO | lownoisethreshold = 1.5
2020-04-08 14:39:52 | INFO | minbeamfraction = 0.3
2020-04-08 14:39:52 | INFO | negativethreshold = 15.0
2020-04-08 14:39:52 | INFO | CLEANing HCG31 to a threshold of 0.0014630766923 Jy.
2020-04-08 14:39:52 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', spw='0:2~58', imagename='images/HCG31', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', scales=None, restoringbeam='common', pbcor=True, weighting='briggs', robust=2, niter=100000, gain=0.1, threshold='0.0014630766923Jy', usemask='auto-multithresh', phasecenter='', sidelobethreshold=2.0, noisethreshold=3.0, lownoisethreshold=1.5, minbeamfrac=0.3, negativethreshold=15.0, cyclefactor=2.0,interactive=False)
2020-04-08 14:49:12 | INFO | CLEANing finished. Image cube saved as HCG31.image.
2020-04-08 14:49:12 | INFO | Coordinate system not J2000. Image will be regridded.
2020-04-08 14:49:12 | INFO | Executing command: imregrid(imagename='images/HCG31'+'.image', template='J2000', output='images/HCG31'+'.image.J2000', asvelocity=True, interpolation='linear', decimate=10, overwrite=True)
2020-04-08 14:49:13 | INFO | HCG31.image.J2000 regridded in J2000 coordinates.
2020-04-08 14:49:13 | INFO | Executing command: imregrid(imagename='images/HCG31'+'.image.pbcor', template='J2000', output='images/HCG31'+'.image.pbcor.J2000', asvelocity=True, interpolation='linear', decimate=10, overwrite=True)
2020-04-08 14:49:14 | INFO | HCG31.image.pbcor.J2000 regridded in J2000 coordinates.
2020-04-08 14:49:14 | INFO | Saving image cube as HCG31_HI.fits
2020-04-08 14:49:14 | INFO | Executing command: exportfits(imagename='images/HCG31.image.J2000', fitsimage='images/HCG31_HI.fits', velocity=True,optical=False,overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-08 14:49:14 | INFO | Saving primary beam corrected image cube as HCG31_HI.pbcor.fits
2020-04-08 14:49:14 | INFO | Executing command: exportfits(imagename='images/HCG31.image.pbcor.J2000', fitsimage='images/HCG31_HI.pbcor.fits', velocity=True,optical=False,overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-08 14:49:14 | INFO | Completed generation of clean image(s).
2020-04-08 14:49:14 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 14:49:28 | INFO | CASA version: 5.4.2
2020-04-08 14:49:28 | INFO | Deleting any existing moment(s).
2020-04-08 14:49:28 | INFO | Starting making noise estimation.
2020-04-08 14:49:30 | INFO | Effective integration time for HCG31: 9275 s
2020-04-08 14:49:30 | INFO | Expected rms noise for HCG31: 0.000585230676919 Jy/beam
2020-04-08 14:49:30 | INFO | Completed making noise estimation.
2020-04-08 14:49:30 | INFO | Create directory: ./moments/
2020-04-08 14:49:30 | WARNING | There are more moment channel ranges than target fields.
2020-04-08 14:49:30 | INFO | Current channel ranges: ['', '', '']
2020-04-08 14:49:30 | WARNING | The channel range list will now be truncated to match the number of targets.
2020-04-08 14:49:30 | INFO | Updating config file to set new moment channel ranges.
2020-04-08 14:49:30 | INFO | Starting generation of moment map(s).
2020-04-08 14:49:30 | INFO | Executing command: immoments(imagename='images/HCG31.image.J2000',includepix=[0.00175569203076,1755.69203076],chans='',outfile='moments/HCG31.mom0')
2020-04-08 14:49:30 | INFO | Executing command: exportfits(imagename='moments/HCG31.mom0', fitsimage='moments/HCG31.mom0.fits',overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-08 14:49:30 | INFO | Completed generation of moment map(s).
2020-04-08 16:47:54 | INFO | CASA version: 5.4.2
2020-04-08 16:47:54 | INFO | Restoring flag version from: Original.
2020-04-08 16:47:54 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='restore', versionname='Original')
2020-04-08 16:47:54 | INFO | Completed restoring flag version.
2020-04-08 16:47:54 | INFO | Starting manual flagging.
2020-04-08 16:47:54 | INFO | Applying flags from manual_flags.list
2020-04-08 16:47:54 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='list', action='apply', inpfile=["mode='manual' antenna='VA05&VA21,VA13&VA21,VA19&VA21'"])
2020-04-08 16:47:55 | CRITICAL | There were severe errors in the CASA log:
2020-04-08 16:47:55 | CRITICAL | 2020-04-08 16:47:55	SEVERE	agentflagger:: (file ../../tools/flagging/agentflagger_cmpt.cc, line 39)	Exception Reported: Antenna Expression: Parse error at or near '&'

2020-04-08 16:47:55 | CRITICAL | 2020-04-08 16:47:55	SEVERE	agentflagger:: (file ../../tools/flagging/agentflagger_cmpt.cc, line 39)+	(near char. 15 in string "VA05&VA21,VA13&VA21,VA19&VA21")

2020-04-08 16:47:55 | CRITICAL | 2020-04-08 16:47:56	SEVERE	flagdata::::	Antenna Expression: Parse error at or near '&'

2020-04-08 16:47:55 | CRITICAL | 2020-04-08 16:47:56	SEVERE	flagdata::::+	(near char. 15 in string "VA05&VA21,VA13&VA21,VA19&VA21")

2020-04-08 16:48:41 | INFO | CASA version: 5.4.2
2020-04-08 16:48:41 | INFO | Restoring flag version from: Original.
2020-04-08 16:48:41 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='restore', versionname='Original')
2020-04-08 16:48:42 | INFO | Completed restoring flag version.
2020-04-08 16:48:42 | INFO | Starting manual flagging.
2020-04-08 16:48:42 | INFO | Applying flags from manual_flags.list
2020-04-08 16:48:42 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='list', action='apply', inpfile=["mode='manual' antenna='VA05&VA21;VA13&VA21;VA19&VA21'"])
2020-04-08 16:48:44 | INFO | Completed manual flagging.
2020-04-08 16:48:44 | INFO | Starting basic flagging.
2020-04-08 16:48:44 | INFO | Flagging antennae with more than 5.0 m of shadowing.
2020-04-08 16:48:44 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='shadow', tolerance=5.0, flagbackup=False)
2020-04-08 16:48:48 | INFO | Flagging zero amplitude data.
2020-04-08 16:48:48 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='clip', clipzeros=True, flagbackup=False)
2020-04-08 16:48:54 | INFO | Flagging first 5.0 s of every scan.
2020-04-08 16:48:54 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='quack', quackinterval=5.0, quackmode='beg', flagbackup=False)
2020-04-08 16:48:56 | INFO | Completed basic flagging.
2020-04-08 16:48:56 | INFO | Starting running TFCrop.
2020-04-08 16:48:56 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='tfcrop', action='apply', display='', timecutoff=4.0, freqcutoff=4.0, flagbackup=False)
2020-04-08 16:49:15 | INFO | Completed running TFCrop.
2020-04-08 16:49:15 | INFO | Removing flag version: initial.
2020-04-08 16:49:15 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='initial')
2020-04-08 16:49:15 | INFO | Completed removing flag version.
2020-04-08 16:49:15 | INFO | Saving flag version as: initial.
2020-04-08 16:49:15 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='initial')
2020-04-08 16:49:16 | INFO | Completed saving flag version.
2020-04-08 16:49:16 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.initialflags.summary.
2020-04-08 16:49:18 | INFO | Total flagged data: 10.59%
2020-04-08 16:49:18 | INFO | Completed writing flag summary.
2020-04-08 16:49:18 | INFO | Starting reference antenna selection.
2020-04-08 16:49:18 | INFO | Reference antenna already set as: VA27.
2020-04-08 16:49:18 | INFO | Starting set field purposes.
2020-04-08 16:49:18 | INFO | Target field(s) already set as: ['HCG31'].
2020-04-08 16:49:18 | INFO | Flux calibrator already set as: ['0134+329'].
2020-04-08 16:49:18 | INFO | Flux models already set as: ['3C48_L.im'].
2020-04-08 16:49:18 | INFO | Bandpass calibrator already set as: ['0134+329'].
2020-04-08 16:49:18 | INFO | Phase calibrator already set as: ['0500+019'].
2020-04-08 16:49:18 | INFO | No changes made to preset target and calibrator fields.
2020-04-08 16:49:18 | INFO | Completed setting field purposes.
2020-04-08 16:49:18 | INFO | Making flags plots for flag version: initial
2020-04-08 16:49:18 | INFO | Making flags plots for 0134+329.
2020-04-08 16:49:18 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0134+329_freq_ob0_spw0.png
2020-04-08 16:49:25 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0134+329_time_ob0_spw0.png
2020-04-08 16:49:32 | INFO | Making flags plots for 0134+329.
2020-04-08 16:49:32 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0134+329_freq_ob1_spw0.png
2020-04-08 16:49:35 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0134+329_time_ob1_spw0.png
2020-04-08 16:49:36 | INFO | Making flags plots for 0500+019.
2020-04-08 16:49:36 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0500+019_freq_ob0_spw0.png
2020-04-08 16:49:38 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0500+019_time_ob0_spw0.png
2020-04-08 16:49:40 | INFO | Making flags plots for 0500+019.
2020-04-08 16:49:40 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0500+019_freq_ob1_spw0.png
2020-04-08 16:49:45 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0500+019_time_ob1_spw0.png
2020-04-08 16:49:51 | INFO | Making flags plots for HCG31.
2020-04-08 16:49:51 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_HCG31_freq_ob0_spw0.png
2020-04-08 16:49:57 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_HCG31_time_ob0_spw0.png
2020-04-08 16:50:00 | INFO | Making flags plots for HCG31.
2020-04-08 16:50:00 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_HCG31_freq_ob1_spw0.png
2020-04-08 16:50:13 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_HCG31_time_ob1_spw0.png
2020-04-08 16:50:25 | INFO | Completed flags plots 
2020-04-08 16:50:25 | INFO | Starting calibration.
2020-04-08 16:50:25 | INFO | Calibrating gain vs elevation(./cal_tabs/gaincurve.cal).
2020-04-08 16:50:25 | INFO | Executing command: gencal(vis='MYUN.ms', caltable='./cal_tabs/gaincurve.cal', caltype='gceff')
2020-04-08 16:50:26 | INFO | Load model for flux calibrator 0134+329 (3C48_L.im).
2020-04-08 16:50:26 | INFO | Executing command: setjy(vis='MYUN.ms', field='0134+329', scalebychan=True, model='3C48_L.im')
2020-04-08 16:50:27 | INFO | Plotting bandpass phase vs. time for reference antenna to: ./plots/bpphaseint.png
2020-04-08 16:50:29 | INFO | Calibrating delays for bandpass calibrators ['0134+329'] (./cal_tabs/delays.cal).
2020-04-08 16:50:29 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329', caltable='./cal_tabs/delays.cal', refant='VA27', gaintype='K', gaintable=['./cal_tabs/gaincurve.cal'], spw='0')
2020-04-08 16:50:31 | INFO | Make bandpass calibrator phase solutions for ['0134+329'] (./cal_tabs/bpphase.gcal).
2020-04-08 16:50:31 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329',  caltable='./cal_tabs/bpphase.gcal', refant='VA27', calmode='p', solint='int', combine='', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal','./cal_tabs/delays.cal'], spw='0')
2020-04-08 16:50:36 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob0.png
2020-04-08 16:50:37 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob1.png
2020-04-08 16:50:38 | INFO | Determining bandpass solution(s) (./cal_tabs/bandpass.bcal).
2020-04-08 16:50:38 | INFO | Executing command: bandpass(vis='MYUN.ms', caltable='./cal_tabs/bandpass.bcal', field='0134+329', refant='VA27', solint='inf', solnorm=True, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bpphase.gcal'], spw='0')
2020-04-08 16:50:41 | INFO | Plotting bandpass amplitude solutions to: ./plots/bandpasssol_.png
2020-04-08 16:50:42 | INFO | Determining integration phase solutions (./cal_tabs/intphase.gcal).
2020-04-08 16:50:42 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/intphase.gcal', refant='VA27', calmode='p', solint='int', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 16:50:53 | INFO | Determining scan phase solutions (./cal_tabs/scanphase.gcal).
2020-04-08 16:50:53 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/scanphase.gcal', refant='VA27', calmode='p', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 16:50:58 | INFO | Determining amplitude solutions (./cal_tabs/amp.gcal).
2020-04-08 16:50:58 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/amp.gcal', refant='VA27', calmode='ap', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal'],spw='0')
2020-04-08 16:51:04 | INFO | Plotting phase solutions to: ./plots/phasesol_ob0.png
2020-04-08 16:51:05 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob0.png
2020-04-08 16:51:07 | INFO | Plotting phase solutions to: ./plots/phasesol_ob1.png
2020-04-08 16:51:08 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob1.png
2020-04-08 16:51:09 | INFO | Applying flux scale to calibrators (./cal_tabs/fluxsol.cal).
2020-04-08 16:51:09 | INFO | Executing command: flux_info = fluxscale(vis='MYUN.ms', caltable='./cal_tabs/amp.gcal', fluxtable='./cal_tabs/fluxsol.cal', reference='0134+329', incremental=True)
2020-04-08 16:51:10 | INFO | Writing calibrator fluxes summary to: ./summary/MYUN.ms.flux.summary.
2020-04-08 16:51:10 | INFO | Apply all calibrations to bandpass and flux calibrators.
2020-04-08 16:51:10 | INFO | Applying calibration to: 0134+329
2020-04-08 16:51:10 | INFO | Executing command: applycal(vis='MYUN.ms', field='0134+329', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal'], gainfield=['', '0134+329', '0134+329', '0134+329', '0134+329'], calwt=False)
2020-04-08 16:51:13 | INFO | Plotting corrected phases for ['0134+329'] to: ./plots/corr_phase.png
2020-04-08 16:51:15 | INFO | Plotting corrected amplitudes for ['0134+329'] to: ./plots/corr_amp.png
2020-04-08 16:51:16 | INFO | Apply all calibrations to phase calibrators and targets.
2020-04-08 16:51:16 | INFO | Applying calibration to: 0500+019
2020-04-08 16:51:16 | INFO | Executing command: applycal(vis='MYUN.ms', field='0500+019', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 16:51:20 | INFO | Applying calibration to: HCG31
2020-04-08 16:51:20 | INFO | Executing command: applycal(vis='MYUN.ms', field='HCG31', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 16:51:27 | INFO | Completed calibration.
2020-04-08 16:51:27 | INFO | Starting running rflag with a threshold of 4.0.
2020-04-08 16:51:27 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='rflag', action='apply', datacolumn='corrected', freqdevscale=4.0, timedevscale=4.0, display='', flagbackup=False)
2020-04-08 16:51:59 | INFO | Completed running rflag.
2020-04-08 16:51:59 | INFO | Removing flag version: rflag.
2020-04-08 16:51:59 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='rflag')
2020-04-08 16:51:59 | INFO | Completed removing flag version.
2020-04-08 16:51:59 | INFO | Saving flag version as: rflag.
2020-04-08 16:51:59 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='rflag')
2020-04-08 16:51:59 | INFO | Completed saving flag version.
2020-04-08 16:51:59 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.rflagflags.summary.
2020-04-08 16:52:01 | INFO | Total flagged data: 18.45%
2020-04-08 16:52:01 | INFO | Completed writing flag summary.
2020-04-08 16:52:01 | INFO | Starting extending existing flags.
2020-04-08 16:52:01 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='extend', spw='', extendpols=True, action='apply', display='', flagbackup=False)
2020-04-08 16:52:05 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='extend', spw='', growtime=75.0, growfreq=90.0, action='apply', display='', flagbackup=False)
2020-04-08 16:52:09 | INFO | Completed extending existing flags.
2020-04-08 16:52:09 | INFO | Removing flag version: extended.
2020-04-08 16:52:09 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='extended')
2020-04-08 16:52:09 | INFO | Completed removing flag version.
2020-04-08 16:52:09 | INFO | Saving flag version as: extended.
2020-04-08 16:52:09 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='extended')
2020-04-08 16:52:10 | INFO | Completed saving flag version.
2020-04-08 16:52:10 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.extendedflags.summary.
2020-04-08 16:52:12 | INFO | Total flagged data: 18.89%
2020-04-08 16:52:12 | INFO | Completed writing flag summary.
2020-04-08 16:52:12 | INFO | Starting calibration.
2020-04-08 16:52:12 | INFO | Calibrating gain vs elevation(./cal_tabs/gaincurve.cal).
2020-04-08 16:52:12 | INFO | Executing command: gencal(vis='MYUN.ms', caltable='./cal_tabs/gaincurve.cal', caltype='gceff')
2020-04-08 16:52:12 | INFO | Load model for flux calibrator 0134+329 (3C48_L.im).
2020-04-08 16:52:12 | INFO | Executing command: setjy(vis='MYUN.ms', field='0134+329', scalebychan=True, model='3C48_L.im')
2020-04-08 16:52:13 | INFO | Plotting bandpass phase vs. time for reference antenna to: ./plots/bpphaseint.png
2020-04-08 16:52:15 | INFO | Calibrating delays for bandpass calibrators ['0134+329'] (./cal_tabs/delays.cal).
2020-04-08 16:52:15 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329', caltable='./cal_tabs/delays.cal', refant='VA27', gaintype='K', gaintable=['./cal_tabs/gaincurve.cal'], spw='0')
2020-04-08 16:52:18 | INFO | Make bandpass calibrator phase solutions for ['0134+329'] (./cal_tabs/bpphase.gcal).
2020-04-08 16:52:18 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329',  caltable='./cal_tabs/bpphase.gcal', refant='VA27', calmode='p', solint='int', combine='', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal','./cal_tabs/delays.cal'], spw='0')
2020-04-08 16:52:22 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob0.png
2020-04-08 16:52:23 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob1.png
2020-04-08 16:52:24 | INFO | Determining bandpass solution(s) (./cal_tabs/bandpass.bcal).
2020-04-08 16:52:24 | INFO | Executing command: bandpass(vis='MYUN.ms', caltable='./cal_tabs/bandpass.bcal', field='0134+329', refant='VA27', solint='inf', solnorm=True, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bpphase.gcal'], spw='0')
2020-04-08 16:52:27 | INFO | Plotting bandpass amplitude solutions to: ./plots/bandpasssol_.png
2020-04-08 16:52:28 | INFO | Determining integration phase solutions (./cal_tabs/intphase.gcal).
2020-04-08 16:52:28 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/intphase.gcal', refant='VA27', calmode='p', solint='int', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 16:52:37 | INFO | Determining scan phase solutions (./cal_tabs/scanphase.gcal).
2020-04-08 16:52:37 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/scanphase.gcal', refant='VA27', calmode='p', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-08 16:52:42 | INFO | Determining amplitude solutions (./cal_tabs/amp.gcal).
2020-04-08 16:52:42 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/amp.gcal', refant='VA27', calmode='ap', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal'],spw='0')
2020-04-08 16:52:47 | INFO | Plotting phase solutions to: ./plots/phasesol_ob0.png
2020-04-08 16:52:48 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob0.png
2020-04-08 16:52:50 | INFO | Plotting phase solutions to: ./plots/phasesol_ob1.png
2020-04-08 16:52:51 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob1.png
2020-04-08 16:52:53 | INFO | Applying flux scale to calibrators (./cal_tabs/fluxsol.cal).
2020-04-08 16:52:53 | INFO | Executing command: flux_info = fluxscale(vis='MYUN.ms', caltable='./cal_tabs/amp.gcal', fluxtable='./cal_tabs/fluxsol.cal', reference='0134+329', incremental=True)
2020-04-08 16:52:53 | INFO | Writing calibrator fluxes summary to: ./summary/MYUN.ms.flux.summary.
2020-04-08 16:52:53 | INFO | Apply all calibrations to bandpass and flux calibrators.
2020-04-08 16:52:53 | INFO | Applying calibration to: 0134+329
2020-04-08 16:52:53 | INFO | Executing command: applycal(vis='MYUN.ms', field='0134+329', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal'], gainfield=['', '0134+329', '0134+329', '0134+329', '0134+329'], calwt=False)
2020-04-08 16:52:55 | INFO | Plotting corrected phases for ['0134+329'] to: ./plots/corr_phase.png
2020-04-08 16:52:57 | INFO | Plotting corrected amplitudes for ['0134+329'] to: ./plots/corr_amp.png
2020-04-08 16:52:59 | INFO | Apply all calibrations to phase calibrators and targets.
2020-04-08 16:52:59 | INFO | Applying calibration to: 0500+019
2020-04-08 16:52:59 | INFO | Executing command: applycal(vis='MYUN.ms', field='0500+019', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 16:53:02 | INFO | Applying calibration to: HCG31
2020-04-08 16:53:02 | INFO | Executing command: applycal(vis='MYUN.ms', field='HCG31', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-08 16:53:08 | INFO | Completed calibration.
2020-04-08 16:53:08 | INFO | Removing flag version: final.
2020-04-08 16:53:08 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='final')
2020-04-08 16:53:08 | INFO | Completed removing flag version.
2020-04-08 16:53:08 | INFO | Saving flag version as: final.
2020-04-08 16:53:08 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='final')
2020-04-08 16:53:08 | INFO | Completed saving flag version.
2020-04-08 16:53:08 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.finalflags.summary.
2020-04-08 16:53:11 | INFO | Total flagged data: 18.90%
2020-04-08 16:53:11 | INFO | Completed writing flag summary.
2020-04-08 16:53:11 | INFO | Making flags plots for flag version: final
2020-04-08 16:53:11 | INFO | Making flags plots for 0134+329.
2020-04-08 16:53:11 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0134+329_freq_ob0_spw0.png
2020-04-08 16:53:16 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0134+329_time_ob0_spw0.png
2020-04-08 16:53:24 | INFO | Making flags plots for 0134+329.
2020-04-08 16:53:24 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0134+329_freq_ob1_spw0.png
2020-04-08 16:53:27 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0134+329_time_ob1_spw0.png
2020-04-08 16:53:27 | INFO | Making flags plots for 0500+019.
2020-04-08 16:53:27 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0500+019_freq_ob0_spw0.png
2020-04-08 16:53:30 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0500+019_time_ob0_spw0.png
2020-04-08 16:53:32 | INFO | Making flags plots for 0500+019.
2020-04-08 16:53:32 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0500+019_freq_ob1_spw0.png
2020-04-08 16:53:37 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0500+019_time_ob1_spw0.png
2020-04-08 16:53:44 | INFO | Making flags plots for HCG31.
2020-04-08 16:53:44 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_HCG31_freq_ob0_spw0.png
2020-04-08 16:53:49 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_HCG31_time_ob0_spw0.png
2020-04-08 16:53:53 | INFO | Making flags plots for HCG31.
2020-04-08 16:53:53 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_HCG31_freq_ob1_spw0.png
2020-04-08 16:54:10 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_HCG31_time_ob1_spw0.png
2020-04-08 16:54:25 | INFO | Completed flags plots 
2020-04-08 16:54:25 | INFO | Deleted: sources
2020-04-08 16:54:25 | INFO | Starting split fields.
2020-04-08 16:54:25 | INFO | Create directory: ./sources/
2020-04-08 16:54:25 | INFO | Splitting HCG31 into separate file: HCG31.split.
2020-04-08 16:54:25 | INFO | Executing command: split(vis='MYUN.ms', outputvis='sources/HCG31.split', field='HCG31')
2020-04-08 16:54:28 | INFO | Deleted: ./summary/HCG31.listobs.summary
2020-04-08 16:54:28 | INFO | Writing listobs summary for split data set to: ./summary/HCG31.listobs.summary
2020-04-08 16:54:29 | INFO | Completed split fields.
2020-04-08 16:54:29 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 16:54:32 | INFO | CASA version: 5.4.2
2020-04-08 16:54:32 | INFO | Deleted: images
2020-04-08 16:54:32 | INFO | Starting making dirty continuum image.
2020-04-08 16:54:32 | INFO | Removing any existing dirty continuum images.
2020-04-08 16:54:32 | INFO | Checking clean parameters for dirty image (inc. continuum).
2020-04-08 16:54:32 | INFO | Pixel sizes set as: ['2arcsec'].
2020-04-08 16:54:32 | INFO | For the targets: ['HCG31'].
2020-04-08 16:54:32 | INFO | Image sizes set as: ['256'] pixels.
2020-04-08 16:54:32 | INFO | For the targets: ['HCG31'].
2020-04-08 16:54:32 | INFO | Making dirty image of HCG31 (inc. continuum).
2020-04-08 16:54:32 | INFO | Executing command: tclean(vis='sources/HCG31.split', field='HCG31', imagename='images/HCG31.cont.dirty', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', weighting='briggs', robust=2, niter=0, phasecenter='', interactive=False)
2020-04-08 16:55:08 | INFO | Completed making dirty continuum image.
2020-04-08 16:55:08 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 16:55:11 | INFO | CASA version: 5.4.2
2020-04-08 16:55:11 | INFO | Starting plotting amplitude spectrum.
2020-04-08 16:55:11 | INFO | Plotting amplitude vs channel to ./plots/HCG31_amp_chn.png
2020-04-08 16:55:25 | INFO | Plotting amplitude vs velocity to ./plots/HCG31_amp_vel.png
2020-04-08 16:55:47 | INFO | Completed plotting amplitude spectrum.
2020-04-08 16:55:47 | INFO | Starting continuum subtraction.
2020-04-08 16:55:47 | INFO | Checking for line free channel ranges in parameters.
2020-04-08 16:55:47 | INFO | Line free channels set as: ['0:1~5;54~59'].
2020-04-08 16:55:47 | INFO | Fit order(s) set as: 1.
2020-04-08 16:55:47 | INFO | For the targets: ['HCG31'].
2020-04-08 16:55:47 | INFO | Subtracting the continuum from field: HCG31
2020-04-08 16:55:47 | INFO | Executing command: uvcontsub(vis='sources/HCG31'+'.split', field='HCG31', fitspw='0:1~5;54~59', spw='0', excludechans=False, combine='spw', solint='int', fitorder=1, want_cont=False)
2020-04-08 16:56:13 | INFO | Completed continuum subtraction.
2020-04-08 16:56:13 | INFO | Starting plotting amplitude spectrum.
2020-04-08 16:56:13 | INFO | Plotting amplitude vs channel to ./plots/HCG31_contsub_amp_chn.png
2020-04-08 16:56:29 | INFO | Completed plotting amplitude spectrum.
2020-04-08 16:56:29 | INFO | Starting making dirty image.
2020-04-08 16:56:29 | INFO | Removing any existing dirty images.
2020-04-08 16:56:29 | INFO | Checking clean parameters for dirty image.
2020-04-08 16:56:29 | INFO | Pixel sizes set as: ['2arcsec'].
2020-04-08 16:56:29 | INFO | For the targets: ['HCG31'].
2020-04-08 16:56:29 | INFO | Image sizes set as: ['256'] pixels.
2020-04-08 16:56:29 | INFO | For the targets: ['HCG31'].
2020-04-08 16:56:29 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 16:56:29 | INFO | For the targets: ['HCG31'].
2020-04-08 16:56:29 | INFO | Making dirty image of HCG31 (line only).
2020-04-08 16:56:29 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', imagename='images/HCG31'+'.dirty', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', weighting='briggs', robust=2, restoringbeam='common', niter=0, phasecenter='', interactive=False)
2020-04-08 16:58:18 | INFO | Completed making dirty image.
2020-04-08 16:58:18 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 16:58:23 | INFO | CASA version: 5.4.2
2020-04-08 16:58:23 | INFO | Deleting any existing clean image(s).
2020-04-08 16:58:23 | INFO | Starting making noise estimation.
2020-04-08 16:58:24 | INFO | Effective integration time for HCG31: 9187 s
2020-04-08 16:58:24 | INFO | Expected rms noise for HCG31: 0.000588050390956 Jy/beam
2020-04-08 16:58:24 | INFO | Completed making noise estimation.
2020-04-08 16:58:24 | INFO | Starting generation of clean image(s).
2020-04-08 16:58:24 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 16:58:24 | INFO | For the targets: ['HCG31'].
2020-04-08 16:58:24 | INFO | Setting CLEAN algorithm to MS-CLEAN.
2020-04-08 16:58:24 | INFO | Starting HCG31 image.
2020-04-08 16:58:24 | INFO | Automasking parameters set as:
2020-04-08 16:58:24 | INFO | sidelobethreshold = 2.0
2020-04-08 16:58:24 | INFO | noisethreshold = 3.0
2020-04-08 16:58:24 | INFO | lownoisethreshold = 1.5
2020-04-08 16:58:24 | INFO | minbeamfraction = 0.3
2020-04-08 16:58:24 | INFO | negativethreshold = 15.0
2020-04-08 16:58:25 | INFO | The maximum recoverable scale for HCG31 is 471 arcsec.
2020-04-08 16:58:25 | WARNING | Some MS-CLEAN scale(s) is (are) larger than largest recoverable angular scales.
2020-04-08 16:58:25 | INFO | Removing offending scales.
2020-04-08 16:58:25 | INFO | CLEANing with scales of [0, 224, 74] pixels.
2020-04-08 16:58:25 | INFO | CLEANing HCG31 to a threshold of 0.00147012597739 Jy.
2020-04-08 16:58:25 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', spw='0:2~58', imagename='images/HCG31', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='multiscale', scales=[0, 224, 74], restoringbeam='common', pbcor=True, weighting='briggs', robust=2, niter=100000, gain=0.1, threshold='0.00147012597739Jy', usemask='auto-multithresh', phasecenter='', sidelobethreshold=2.0, noisethreshold=3.0, lownoisethreshold=1.5, minbeamfrac=0.3, negativethreshold=15.0, cyclefactor=2.0,interactive=False)
2020-04-08 17:00:13 | CRITICAL | There were severe errors in the CASA log:
2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:25	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 17:00:13 | CRITICAL | 2020-04-08 16:59:26	SEVERE	task_tclean::MatrixCleaner::clean() (file ../../synthesis/MeasurementEquations/MatrixCleaner.cc, line 327)	As Peak of PSF is negative, you should setscales again with a smaller scale size

2020-04-08 20:21:46 | INFO | CASA version: 5.4.2
2020-04-08 20:21:46 | INFO | Deleting any existing clean image(s).
2020-04-08 20:21:47 | INFO | Starting making noise estimation.
2020-04-08 20:21:50 | INFO | Effective integration time for HCG31: 9187 s
2020-04-08 20:21:50 | INFO | Expected rms noise for HCG31: 0.000588050390956 Jy/beam
2020-04-08 20:21:50 | INFO | Completed making noise estimation.
2020-04-08 20:21:50 | INFO | Starting generation of clean image(s).
2020-04-08 20:21:50 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 20:21:50 | INFO | For the targets: ['HCG31'].
2020-04-08 20:21:50 | INFO | Setting CLEAN algorithm to MS-CLEAN.
2020-04-08 20:21:50 | INFO | Starting HCG31 image.
2020-04-08 20:21:51 | INFO | Automasking parameters set as:
2020-04-08 20:21:51 | INFO | sidelobethreshold = 2.0
2020-04-08 20:21:51 | INFO | noisethreshold = 3.0
2020-04-08 20:21:51 | INFO | lownoisethreshold = 1.5
2020-04-08 20:21:51 | INFO | minbeamfraction = 0.3
2020-04-08 20:21:51 | INFO | negativethreshold = 15.0
2020-04-08 20:21:51 | INFO | The maximum recoverable scale for HCG31 is 471 arcsec.
2020-04-08 20:21:51 | INFO | CLEANing with scales of [0, 74, 224] pixels.
2020-04-08 20:21:51 | INFO | CLEANing HCG31 to a threshold of 0.00147012597739 Jy.
2020-04-08 20:21:51 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', spw='0:2~58', imagename='images/HCG31', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='multiscale', scales=[0, 74, 224], restoringbeam='common', pbcor=True, weighting='briggs', robust=2, niter=100000, gain=0.1, threshold='0.00147012597739Jy', usemask='auto-multithresh', phasecenter='', sidelobethreshold=2.0, noisethreshold=3.0, lownoisethreshold=1.5, minbeamfrac=0.3, negativethreshold=15.0, cyclefactor=2.0,interactive=False)
2020-04-08 20:28:13 | INFO | CASA version: 5.4.2
2020-04-08 20:28:13 | INFO | Deleting any existing clean image(s).
2020-04-08 20:28:13 | INFO | Starting making noise estimation.
2020-04-08 20:28:16 | INFO | Effective integration time for HCG31: 9187 s
2020-04-08 20:28:16 | INFO | Expected rms noise for HCG31: 0.000588050390956 Jy/beam
2020-04-08 20:28:16 | INFO | Completed making noise estimation.
2020-04-08 20:28:16 | INFO | Starting generation of clean image(s).
2020-04-08 20:28:16 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-08 20:28:16 | INFO | For the targets: ['HCG31'].
2020-04-08 20:28:16 | INFO | Setting CLEAN algorithm to Hogbom.
2020-04-08 20:28:16 | INFO | Starting HCG31 image.
2020-04-08 20:28:16 | INFO | Automasking parameters set as:
2020-04-08 20:28:16 | INFO | sidelobethreshold = 2.0
2020-04-08 20:28:16 | INFO | noisethreshold = 3.0
2020-04-08 20:28:16 | INFO | lownoisethreshold = 1.5
2020-04-08 20:28:16 | INFO | minbeamfraction = 0.3
2020-04-08 20:28:16 | INFO | negativethreshold = 15.0
2020-04-08 20:28:16 | INFO | CLEANing HCG31 to a threshold of 0.00147012597739 Jy.
2020-04-08 20:28:16 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', spw='0:2~58', imagename='images/HCG31', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', scales=None, restoringbeam='common', pbcor=True, weighting='briggs', robust=2, niter=100000, gain=0.1, threshold='0.00147012597739Jy', usemask='auto-multithresh', phasecenter='', sidelobethreshold=2.0, noisethreshold=3.0, lownoisethreshold=1.5, minbeamfrac=0.3, negativethreshold=15.0, cyclefactor=2.0,interactive=False)
2020-04-08 20:40:35 | INFO | CLEANing finished. Image cube saved as HCG31.image.
2020-04-08 20:40:35 | INFO | Coordinate system not J2000. Image will be regridded.
2020-04-08 20:40:35 | INFO | Executing command: imregrid(imagename='images/HCG31'+'.image', template='J2000', output='images/HCG31'+'.image.J2000', asvelocity=True, interpolation='linear', decimate=10, overwrite=True)
2020-04-08 20:40:36 | INFO | HCG31.image.J2000 regridded in J2000 coordinates.
2020-04-08 20:40:36 | INFO | Executing command: imregrid(imagename='images/HCG31'+'.image.pbcor', template='J2000', output='images/HCG31'+'.image.pbcor.J2000', asvelocity=True, interpolation='linear', decimate=10, overwrite=True)
2020-04-08 20:40:37 | INFO | HCG31.image.pbcor.J2000 regridded in J2000 coordinates.
2020-04-08 20:40:37 | INFO | Saving image cube as HCG31_HI.fits
2020-04-08 20:40:37 | INFO | Executing command: exportfits(imagename='images/HCG31.image.J2000', fitsimage='images/HCG31_HI.fits', velocity=True,optical=False,overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-08 20:40:37 | INFO | Saving primary beam corrected image cube as HCG31_HI.pbcor.fits
2020-04-08 20:40:37 | INFO | Executing command: exportfits(imagename='images/HCG31.image.pbcor.J2000', fitsimage='images/HCG31_HI.pbcor.fits', velocity=True,optical=False,overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-08 20:40:37 | INFO | Completed generation of clean image(s).
2020-04-08 20:40:37 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-08 20:41:24 | INFO | CASA version: 5.4.2
2020-04-08 20:41:24 | INFO | Deleting any existing moment(s).
2020-04-08 20:41:25 | INFO | Starting making noise estimation.
2020-04-08 20:41:26 | INFO | Effective integration time for HCG31: 9187 s
2020-04-08 20:41:26 | INFO | Expected rms noise for HCG31: 0.000588050390956 Jy/beam
2020-04-08 20:41:26 | INFO | Completed making noise estimation.
2020-04-08 20:41:26 | INFO | Starting generation of moment map(s).
2020-04-08 20:41:26 | INFO | Executing command: immoments(imagename='images/HCG31.image.J2000',includepix=[0.00176415117287,1764.15117287],chans='',outfile='moments/HCG31.mom0')
2020-04-08 20:41:29 | INFO | Executing command: exportfits(imagename='moments/HCG31.mom0', fitsimage='moments/HCG31.mom0.fits',overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-08 20:41:29 | INFO | Completed generation of moment map(s).
2020-04-09 09:41:12 | INFO | CASA version: 5.4.2
2020-04-09 09:41:12 | INFO | Restoring flag version from: Original.
2020-04-09 09:41:12 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='restore', versionname='Original')
2020-04-09 09:41:13 | INFO | Completed restoring flag version.
2020-04-09 09:41:13 | INFO | Starting manual flagging.
2020-04-09 09:41:13 | INFO | Applying flags from manual_flags.list
2020-04-09 09:41:13 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='list', action='apply', inpfile=["mode='manual' antenna='VA05&VA21;VA13&VA21;VA19&VA21;VA14'"])
2020-04-09 09:41:17 | INFO | Completed manual flagging.
2020-04-09 09:41:17 | INFO | Starting basic flagging.
2020-04-09 09:41:17 | INFO | Flagging antennae with more than 5.0 m of shadowing.
2020-04-09 09:41:17 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='shadow', tolerance=5.0, flagbackup=False)
2020-04-09 09:41:21 | INFO | Flagging zero amplitude data.
2020-04-09 09:41:21 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='clip', clipzeros=True, flagbackup=False)
2020-04-09 09:41:26 | INFO | Flagging first 5.0 s of every scan.
2020-04-09 09:41:26 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='quack', quackinterval=5.0, quackmode='beg', flagbackup=False)
2020-04-09 09:41:29 | INFO | Completed basic flagging.
2020-04-09 09:41:29 | INFO | Starting running TFCrop.
2020-04-09 09:41:29 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='tfcrop', action='apply', display='', timecutoff=4.0, freqcutoff=4.0, flagbackup=False)
2020-04-09 09:41:47 | INFO | Completed running TFCrop.
2020-04-09 09:41:47 | INFO | Removing flag version: initial.
2020-04-09 09:41:47 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='initial')
2020-04-09 09:41:48 | INFO | Completed removing flag version.
2020-04-09 09:41:48 | INFO | Saving flag version as: initial.
2020-04-09 09:41:48 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='initial')
2020-04-09 09:41:48 | INFO | Completed saving flag version.
2020-04-09 09:41:48 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.initialflags.summary.
2020-04-09 09:41:50 | INFO | Total flagged data: 17.56%
2020-04-09 09:41:50 | INFO | Completed writing flag summary.
2020-04-09 09:41:50 | INFO | Starting reference antenna selection.
2020-04-09 09:41:50 | INFO | Reference antenna already set as: VA27.
2020-04-09 09:41:50 | INFO | Starting set field purposes.
2020-04-09 09:41:50 | INFO | Target field(s) already set as: ['HCG31'].
2020-04-09 09:41:50 | INFO | Flux calibrator already set as: ['0134+329'].
2020-04-09 09:41:50 | INFO | Flux models already set as: ['3C48_L.im'].
2020-04-09 09:41:50 | INFO | Bandpass calibrator already set as: ['0134+329'].
2020-04-09 09:41:50 | INFO | Phase calibrator already set as: ['0500+019'].
2020-04-09 09:41:50 | INFO | No changes made to preset target and calibrator fields.
2020-04-09 09:41:50 | INFO | Completed setting field purposes.
2020-04-09 09:41:50 | INFO | Making flags plots for flag version: initial
2020-04-09 09:41:50 | INFO | Making flags plots for 0134+329.
2020-04-09 09:41:50 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0134+329_freq_ob0_spw0.png
2020-04-09 09:41:57 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0134+329_time_ob0_spw0.png
2020-04-09 09:42:07 | INFO | Making flags plots for 0134+329.
2020-04-09 09:42:07 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0134+329_freq_ob1_spw0.png
2020-04-09 09:42:10 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0134+329_time_ob1_spw0.png
2020-04-09 09:42:10 | INFO | Making flags plots for 0500+019.
2020-04-09 09:42:10 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0500+019_freq_ob0_spw0.png
2020-04-09 09:42:13 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0500+019_time_ob0_spw0.png
2020-04-09 09:42:16 | INFO | Making flags plots for 0500+019.
2020-04-09 09:42:16 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_0500+019_freq_ob1_spw0.png
2020-04-09 09:42:22 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_0500+019_time_ob1_spw0.png
2020-04-09 09:42:29 | INFO | Making flags plots for HCG31.
2020-04-09 09:42:29 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_HCG31_freq_ob0_spw0.png
2020-04-09 09:42:34 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_HCG31_time_ob0_spw0.png
2020-04-09 09:42:38 | INFO | Making flags plots for HCG31.
2020-04-09 09:42:38 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_initial_HCG31_freq_ob1_spw0.png
2020-04-09 09:42:57 | INFO | Plotting amplitude vs time to ./plots/flag_plot_initial_HCG31_time_ob1_spw0.png
2020-04-09 09:43:12 | INFO | Completed flags plots 
2020-04-09 09:43:12 | INFO | Starting calibration.
2020-04-09 09:43:12 | INFO | Calibrating gain vs elevation(./cal_tabs/gaincurve.cal).
2020-04-09 09:43:12 | INFO | Executing command: gencal(vis='MYUN.ms', caltable='./cal_tabs/gaincurve.cal', caltype='gceff')
2020-04-09 09:43:13 | INFO | Load model for flux calibrator 0134+329 (3C48_L.im).
2020-04-09 09:43:13 | INFO | Executing command: setjy(vis='MYUN.ms', field='0134+329', scalebychan=True, model='3C48_L.im')
2020-04-09 09:43:16 | INFO | Plotting bandpass phase vs. time for reference antenna to: ./plots/bpphaseint.png
2020-04-09 09:43:18 | INFO | Calibrating delays for bandpass calibrators ['0134+329'] (./cal_tabs/delays.cal).
2020-04-09 09:43:18 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329', caltable='./cal_tabs/delays.cal', refant='VA27', gaintype='K', gaintable=['./cal_tabs/gaincurve.cal'], spw='0')
2020-04-09 09:43:22 | INFO | Make bandpass calibrator phase solutions for ['0134+329'] (./cal_tabs/bpphase.gcal).
2020-04-09 09:43:22 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329',  caltable='./cal_tabs/bpphase.gcal', refant='VA27', calmode='p', solint='int', combine='', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal','./cal_tabs/delays.cal'], spw='0')
2020-04-09 09:43:27 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob0.png
2020-04-09 09:43:29 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob1.png
2020-04-09 09:43:30 | INFO | Determining bandpass solution(s) (./cal_tabs/bandpass.bcal).
2020-04-09 09:43:30 | INFO | Executing command: bandpass(vis='MYUN.ms', caltable='./cal_tabs/bandpass.bcal', field='0134+329', refant='VA27', solint='inf', solnorm=True, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bpphase.gcal'], spw='0')
2020-04-09 09:43:34 | INFO | Plotting bandpass amplitude solutions to: ./plots/bandpasssol_.png
2020-04-09 09:43:36 | INFO | Determining integration phase solutions (./cal_tabs/intphase.gcal).
2020-04-09 09:43:36 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/intphase.gcal', refant='VA27', calmode='p', solint='int', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-09 09:43:49 | INFO | Determining scan phase solutions (./cal_tabs/scanphase.gcal).
2020-04-09 09:43:49 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/scanphase.gcal', refant='VA27', calmode='p', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-09 09:43:55 | INFO | Determining amplitude solutions (./cal_tabs/amp.gcal).
2020-04-09 09:43:55 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/amp.gcal', refant='VA27', calmode='ap', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal'],spw='0')
2020-04-09 09:44:02 | INFO | Plotting phase solutions to: ./plots/phasesol_ob0.png
2020-04-09 09:44:04 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob0.png
2020-04-09 09:44:05 | INFO | Plotting phase solutions to: ./plots/phasesol_ob1.png
2020-04-09 09:44:07 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob1.png
2020-04-09 09:44:09 | INFO | Applying flux scale to calibrators (./cal_tabs/fluxsol.cal).
2020-04-09 09:44:09 | INFO | Executing command: flux_info = fluxscale(vis='MYUN.ms', caltable='./cal_tabs/amp.gcal', fluxtable='./cal_tabs/fluxsol.cal', reference='0134+329', incremental=True)
2020-04-09 09:44:10 | INFO | Writing calibrator fluxes summary to: ./summary/MYUN.ms.flux.summary.
2020-04-09 09:44:10 | INFO | Apply all calibrations to bandpass and flux calibrators.
2020-04-09 09:44:10 | INFO | Applying calibration to: 0134+329
2020-04-09 09:44:10 | INFO | Executing command: applycal(vis='MYUN.ms', field='0134+329', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal'], gainfield=['', '0134+329', '0134+329', '0134+329', '0134+329'], calwt=False)
2020-04-09 09:44:13 | INFO | Plotting corrected phases for ['0134+329'] to: ./plots/corr_phase.png
2020-04-09 09:44:15 | INFO | Plotting corrected amplitudes for ['0134+329'] to: ./plots/corr_amp.png
2020-04-09 09:44:17 | INFO | Apply all calibrations to phase calibrators and targets.
2020-04-09 09:44:17 | INFO | Applying calibration to: 0500+019
2020-04-09 09:44:17 | INFO | Executing command: applycal(vis='MYUN.ms', field='0500+019', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-09 09:44:21 | INFO | Applying calibration to: HCG31
2020-04-09 09:44:21 | INFO | Executing command: applycal(vis='MYUN.ms', field='HCG31', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-09 09:44:33 | INFO | Completed calibration.
2020-04-09 09:44:33 | INFO | Starting running rflag with a threshold of 4.0.
2020-04-09 09:44:33 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='rflag', action='apply', datacolumn='corrected', freqdevscale=4.0, timedevscale=4.0, display='', flagbackup=False)
2020-04-09 09:45:04 | INFO | Completed running rflag.
2020-04-09 09:45:04 | INFO | Removing flag version: rflag.
2020-04-09 09:45:04 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='rflag')
2020-04-09 09:45:04 | INFO | Completed removing flag version.
2020-04-09 09:45:04 | INFO | Saving flag version as: rflag.
2020-04-09 09:45:04 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='rflag')
2020-04-09 09:45:05 | INFO | Completed saving flag version.
2020-04-09 09:45:05 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.rflagflags.summary.
2020-04-09 09:45:07 | INFO | Total flagged data: 24.66%
2020-04-09 09:45:07 | INFO | Completed writing flag summary.
2020-04-09 09:45:07 | INFO | Starting extending existing flags.
2020-04-09 09:45:07 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='extend', spw='', extendpols=True, action='apply', display='', flagbackup=False)
2020-04-09 09:45:12 | INFO | Executing command: flagdata(vis='MYUN.ms', mode='extend', spw='', growtime=75.0, growfreq=90.0, action='apply', display='', flagbackup=False)
2020-04-09 09:45:16 | INFO | Completed extending existing flags.
2020-04-09 09:45:16 | INFO | Removing flag version: extended.
2020-04-09 09:45:16 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='extended')
2020-04-09 09:45:16 | INFO | Completed removing flag version.
2020-04-09 09:45:16 | INFO | Saving flag version as: extended.
2020-04-09 09:45:16 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='extended')
2020-04-09 09:45:17 | INFO | Completed saving flag version.
2020-04-09 09:45:17 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.extendedflags.summary.
2020-04-09 09:45:19 | INFO | Total flagged data: 24.98%
2020-04-09 09:45:19 | INFO | Completed writing flag summary.
2020-04-09 09:45:19 | INFO | Starting calibration.
2020-04-09 09:45:19 | INFO | Calibrating gain vs elevation(./cal_tabs/gaincurve.cal).
2020-04-09 09:45:19 | INFO | Executing command: gencal(vis='MYUN.ms', caltable='./cal_tabs/gaincurve.cal', caltype='gceff')
2020-04-09 09:45:20 | INFO | Load model for flux calibrator 0134+329 (3C48_L.im).
2020-04-09 09:45:20 | INFO | Executing command: setjy(vis='MYUN.ms', field='0134+329', scalebychan=True, model='3C48_L.im')
2020-04-09 09:45:21 | INFO | Plotting bandpass phase vs. time for reference antenna to: ./plots/bpphaseint.png
2020-04-09 09:45:23 | INFO | Calibrating delays for bandpass calibrators ['0134+329'] (./cal_tabs/delays.cal).
2020-04-09 09:45:23 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329', caltable='./cal_tabs/delays.cal', refant='VA27', gaintype='K', gaintable=['./cal_tabs/gaincurve.cal'], spw='0')
2020-04-09 09:45:28 | INFO | Make bandpass calibrator phase solutions for ['0134+329'] (./cal_tabs/bpphase.gcal).
2020-04-09 09:45:28 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329',  caltable='./cal_tabs/bpphase.gcal', refant='VA27', calmode='p', solint='int', combine='', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal','./cal_tabs/delays.cal'], spw='0')
2020-04-09 09:45:33 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob0.png
2020-04-09 09:45:34 | INFO | Plotting bandpass phase solutions to: ./plots/bpphasesol_ob1.png
2020-04-09 09:45:35 | INFO | Determining bandpass solution(s) (./cal_tabs/bandpass.bcal).
2020-04-09 09:45:35 | INFO | Executing command: bandpass(vis='MYUN.ms', caltable='./cal_tabs/bandpass.bcal', field='0134+329', refant='VA27', solint='inf', solnorm=True, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bpphase.gcal'], spw='0')
2020-04-09 09:45:40 | INFO | Plotting bandpass amplitude solutions to: ./plots/bandpasssol_.png
2020-04-09 09:45:42 | INFO | Determining integration phase solutions (./cal_tabs/intphase.gcal).
2020-04-09 09:45:42 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/intphase.gcal', refant='VA27', calmode='p', solint='int', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-09 09:45:52 | INFO | Determining scan phase solutions (./cal_tabs/scanphase.gcal).
2020-04-09 09:45:52 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/scanphase.gcal', refant='VA27', calmode='p', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal'],spw='0')
2020-04-09 09:45:59 | INFO | Determining amplitude solutions (./cal_tabs/amp.gcal).
2020-04-09 09:45:59 | INFO | Executing command: gaincal(vis='MYUN.ms', field='0134+329,0500+019', caltable='./cal_tabs/amp.gcal', refant='VA27', calmode='ap', solint='inf', minsnr=2.0, gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal'],spw='0')
2020-04-09 09:46:06 | INFO | Plotting phase solutions to: ./plots/phasesol_ob0.png
2020-04-09 09:46:08 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob0.png
2020-04-09 09:46:10 | INFO | Plotting phase solutions to: ./plots/phasesol_ob1.png
2020-04-09 09:46:11 | INFO | Plotting amplitude solutions to: ./plots/ampsol_ob1.png
2020-04-09 09:46:13 | INFO | Applying flux scale to calibrators (./cal_tabs/fluxsol.cal).
2020-04-09 09:46:13 | INFO | Executing command: flux_info = fluxscale(vis='MYUN.ms', caltable='./cal_tabs/amp.gcal', fluxtable='./cal_tabs/fluxsol.cal', reference='0134+329', incremental=True)
2020-04-09 09:46:16 | INFO | Writing calibrator fluxes summary to: ./summary/MYUN.ms.flux.summary.
2020-04-09 09:46:16 | INFO | Apply all calibrations to bandpass and flux calibrators.
2020-04-09 09:46:16 | INFO | Applying calibration to: 0134+329
2020-04-09 09:46:16 | INFO | Executing command: applycal(vis='MYUN.ms', field='0134+329', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal'], gainfield=['', '0134+329', '0134+329', '0134+329', '0134+329'], calwt=False)
2020-04-09 09:46:18 | INFO | Plotting corrected phases for ['0134+329'] to: ./plots/corr_phase.png
2020-04-09 09:46:21 | INFO | Plotting corrected amplitudes for ['0134+329'] to: ./plots/corr_amp.png
2020-04-09 09:46:24 | INFO | Apply all calibrations to phase calibrators and targets.
2020-04-09 09:46:24 | INFO | Applying calibration to: 0500+019
2020-04-09 09:46:24 | INFO | Executing command: applycal(vis='MYUN.ms', field='0500+019', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-09 09:46:44 | INFO | Applying calibration to: HCG31
2020-04-09 09:46:44 | INFO | Executing command: applycal(vis='MYUN.ms', field='HCG31', gaintable=['./cal_tabs/gaincurve.cal', './cal_tabs/delays.cal', './cal_tabs/bandpass.bcal', './cal_tabs/intphase.gcal', './cal_tabs/amp.gcal', './cal_tabs/fluxsol.cal'], gainfield=['', '0134+329', '0134+329', '0500+019', '0500+019', '0500+019'], calwt=False)
2020-04-09 09:46:52 | INFO | Completed calibration.
2020-04-09 09:46:52 | INFO | Removing flag version: final.
2020-04-09 09:46:52 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='delete', versionname='final')
2020-04-09 09:46:52 | INFO | Completed removing flag version.
2020-04-09 09:46:52 | INFO | Saving flag version as: final.
2020-04-09 09:46:52 | INFO | Executing command: flagmanager(vis='MYUN.ms', mode='save', versionname='final')
2020-04-09 09:46:53 | INFO | Completed saving flag version.
2020-04-09 09:46:53 | INFO | Starting writing flag summary to: ./summary/MYUN.ms.finalflags.summary.
2020-04-09 09:46:56 | INFO | Total flagged data: 24.98%
2020-04-09 09:46:56 | INFO | Completed writing flag summary.
2020-04-09 09:46:56 | INFO | Making flags plots for flag version: final
2020-04-09 09:46:56 | INFO | Making flags plots for 0134+329.
2020-04-09 09:46:56 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0134+329_freq_ob0_spw0.png
2020-04-09 09:47:03 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0134+329_time_ob0_spw0.png
2020-04-09 09:47:12 | INFO | Making flags plots for 0134+329.
2020-04-09 09:47:12 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0134+329_freq_ob1_spw0.png
2020-04-09 09:47:15 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0134+329_time_ob1_spw0.png
2020-04-09 09:47:16 | INFO | Making flags plots for 0500+019.
2020-04-09 09:47:16 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0500+019_freq_ob0_spw0.png
2020-04-09 09:47:27 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0500+019_time_ob0_spw0.png
2020-04-09 09:47:30 | INFO | Making flags plots for 0500+019.
2020-04-09 09:47:30 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_0500+019_freq_ob1_spw0.png
2020-04-09 09:47:37 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_0500+019_time_ob1_spw0.png
2020-04-09 09:47:45 | INFO | Making flags plots for HCG31.
2020-04-09 09:47:45 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_HCG31_freq_ob0_spw0.png
2020-04-09 09:47:51 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_HCG31_time_ob0_spw0.png
2020-04-09 09:48:09 | INFO | Making flags plots for HCG31.
2020-04-09 09:48:09 | INFO | Plotting amplitude vs frequency to ./plots/flag_plot_final_HCG31_freq_ob1_spw0.png
2020-04-09 09:48:35 | INFO | Plotting amplitude vs time to ./plots/flag_plot_final_HCG31_time_ob1_spw0.png
2020-04-09 09:50:28 | INFO | Completed flags plots 
2020-04-09 09:50:28 | INFO | Deleted: sources
2020-04-09 09:50:28 | INFO | Starting split fields.
2020-04-09 09:50:28 | INFO | Create directory: ./sources/
2020-04-09 09:50:28 | INFO | Splitting HCG31 into separate file: HCG31.split.
2020-04-09 09:50:28 | INFO | Executing command: split(vis='MYUN.ms', outputvis='sources/HCG31.split', field='HCG31')
2020-04-09 09:52:10 | INFO | Deleted: ./summary/HCG31.listobs.summary
2020-04-09 09:52:10 | INFO | Writing listobs summary for split data set to: ./summary/HCG31.listobs.summary
2020-04-09 09:52:11 | INFO | Completed split fields.
2020-04-09 09:52:11 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-09 09:53:17 | INFO | CASA version: 5.4.2
2020-04-09 09:53:17 | INFO | Deleted: images
2020-04-09 09:53:17 | INFO | Starting making dirty continuum image.
2020-04-09 09:53:17 | INFO | Removing any existing dirty continuum images.
2020-04-09 09:53:17 | INFO | Checking clean parameters for dirty image (inc. continuum).
2020-04-09 09:53:17 | INFO | Pixel sizes set as: ['2arcsec'].
2020-04-09 09:53:17 | INFO | For the targets: ['HCG31'].
2020-04-09 09:53:17 | INFO | Image sizes set as: ['256'] pixels.
2020-04-09 09:53:17 | INFO | For the targets: ['HCG31'].
2020-04-09 09:53:17 | INFO | Making dirty image of HCG31 (inc. continuum).
2020-04-09 09:53:17 | INFO | Executing command: tclean(vis='sources/HCG31.split', field='HCG31', imagename='images/HCG31.cont.dirty', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', weighting='briggs', robust=2, niter=0, phasecenter='', interactive=False)
2020-04-09 09:55:35 | INFO | Completed making dirty continuum image.
2020-04-09 09:55:36 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-09 09:56:28 | INFO | CASA version: 5.4.2
2020-04-09 09:56:28 | INFO | Starting plotting amplitude spectrum.
2020-04-09 09:56:28 | INFO | Plotting amplitude vs channel to ./plots/HCG31_amp_chn.png
2020-04-09 09:57:25 | INFO | Plotting amplitude vs velocity to ./plots/HCG31_amp_vel.png
2020-04-09 09:58:05 | INFO | Completed plotting amplitude spectrum.
2020-04-09 09:58:05 | INFO | Starting continuum subtraction.
2020-04-09 09:58:05 | INFO | Checking for line free channel ranges in parameters.
2020-04-09 09:58:05 | INFO | Line free channels set as: ['0:1~5;54~59'].
2020-04-09 09:58:05 | INFO | Fit order(s) set as: 1.
2020-04-09 09:58:05 | INFO | For the targets: ['HCG31'].
2020-04-09 09:58:05 | INFO | Subtracting the continuum from field: HCG31
2020-04-09 09:58:05 | INFO | Executing command: uvcontsub(vis='sources/HCG31'+'.split', field='HCG31', fitspw='0:1~5;54~59', spw='0', excludechans=False, combine='spw', solint='int', fitorder=1, want_cont=False)
2020-04-09 10:00:04 | INFO | Completed continuum subtraction.
2020-04-09 10:00:04 | INFO | Starting plotting amplitude spectrum.
2020-04-09 10:00:04 | INFO | Plotting amplitude vs channel to ./plots/HCG31_contsub_amp_chn.png
2020-04-09 10:00:35 | INFO | Completed plotting amplitude spectrum.
2020-04-09 10:00:35 | INFO | Starting making dirty image.
2020-04-09 10:00:35 | INFO | Removing any existing dirty images.
2020-04-09 10:00:35 | INFO | Checking clean parameters for dirty image.
2020-04-09 10:00:35 | INFO | Pixel sizes set as: ['2arcsec'].
2020-04-09 10:00:35 | INFO | For the targets: ['HCG31'].
2020-04-09 10:00:35 | INFO | Image sizes set as: ['256'] pixels.
2020-04-09 10:00:35 | INFO | For the targets: ['HCG31'].
2020-04-09 10:00:35 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-09 10:00:35 | INFO | For the targets: ['HCG31'].
2020-04-09 10:00:35 | INFO | Making dirty image of HCG31 (line only).
2020-04-09 10:00:35 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', imagename='images/HCG31'+'.dirty', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', weighting='briggs', robust=2, restoringbeam='common', niter=0, phasecenter='', interactive=False)
2020-04-09 10:01:54 | INFO | Completed making dirty image.
2020-04-09 10:01:54 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-09 10:03:13 | INFO | CASA version: 5.4.2
2020-04-09 10:03:13 | INFO | Deleting any existing clean image(s).
2020-04-09 10:03:13 | INFO | Starting making noise estimation.
2020-04-09 10:03:19 | INFO | Effective integration time for HCG31: 8500 s
2020-04-09 10:03:19 | INFO | Expected rms noise for HCG31: 0.000611336579682 Jy/beam
2020-04-09 10:03:19 | INFO | Completed making noise estimation.
2020-04-09 10:03:19 | INFO | Starting generation of clean image(s).
2020-04-09 10:03:19 | INFO | Line emission channels set as: ['0:2~58'].
2020-04-09 10:03:19 | INFO | For the targets: ['HCG31'].
2020-04-09 10:03:19 | INFO | Setting CLEAN algorithm to Hogbom.
2020-04-09 10:03:19 | INFO | Starting HCG31 image.
2020-04-09 10:03:20 | INFO | Automasking parameters set as:
2020-04-09 10:03:20 | INFO | sidelobethreshold = 2.0
2020-04-09 10:03:20 | INFO | noisethreshold = 3.0
2020-04-09 10:03:20 | INFO | lownoisethreshold = 1.5
2020-04-09 10:03:20 | INFO | minbeamfraction = 0.3
2020-04-09 10:03:20 | INFO | negativethreshold = 15.0
2020-04-09 10:03:20 | INFO | CLEANing HCG31 to a threshold of 0.00152834144921 Jy.
2020-04-09 10:03:20 | INFO | Executing command: tclean(vis='sources/HCG31'+'.split.contsub', field='HCG31', spw='0:2~58', imagename='images/HCG31', cell='2arcsec', imsize=[256,256], specmode='cube', outframe='bary', veltype='radio', restfreq='1420405751.786Hz', gridder='wproject', wprojplanes=128, pblimit=0.1, normtype='flatnoise', deconvolver='hogbom', scales=None, restoringbeam='common', pbcor=True, weighting='briggs', robust=2, niter=100000, gain=0.1, threshold='0.00152834144921Jy', usemask='auto-multithresh', phasecenter='', sidelobethreshold=2.0, noisethreshold=3.0, lownoisethreshold=1.5, minbeamfrac=0.3, negativethreshold=15.0, cyclefactor=2.0,interactive=False)
2020-04-09 10:15:35 | INFO | CLEANing finished. Image cube saved as HCG31.image.
2020-04-09 10:15:36 | INFO | Coordinate system not J2000. Image will be regridded.
2020-04-09 10:15:36 | INFO | Executing command: imregrid(imagename='images/HCG31'+'.image', template='J2000', output='images/HCG31'+'.image.J2000', asvelocity=True, interpolation='linear', decimate=10, overwrite=True)
2020-04-09 10:15:42 | INFO | HCG31.image.J2000 regridded in J2000 coordinates.
2020-04-09 10:15:42 | INFO | Executing command: imregrid(imagename='images/HCG31'+'.image.pbcor', template='J2000', output='images/HCG31'+'.image.pbcor.J2000', asvelocity=True, interpolation='linear', decimate=10, overwrite=True)
2020-04-09 10:15:45 | INFO | HCG31.image.pbcor.J2000 regridded in J2000 coordinates.
2020-04-09 10:15:45 | INFO | Saving image cube as HCG31_HI.fits
2020-04-09 10:15:45 | INFO | Executing command: exportfits(imagename='images/HCG31.image.J2000', fitsimage='images/HCG31_HI.fits', velocity=True,optical=False,overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-09 10:15:45 | INFO | Saving primary beam corrected image cube as HCG31_HI.pbcor.fits
2020-04-09 10:15:45 | INFO | Executing command: exportfits(imagename='images/HCG31.image.pbcor.J2000', fitsimage='images/HCG31_HI.pbcor.fits', velocity=True,optical=False,overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-09 10:15:45 | INFO | Completed generation of clean image(s).
2020-04-09 10:15:46 | INFO | Backing up MYUN_params.cfg to backup.MYUN_params.cfg.
2020-04-09 10:16:27 | INFO | CASA version: 5.4.2
2020-04-09 10:16:27 | INFO | Deleting any existing moment(s).
2020-04-09 10:16:27 | INFO | Starting making noise estimation.
2020-04-09 10:16:29 | INFO | Effective integration time for HCG31: 8500 s
2020-04-09 10:16:29 | INFO | Expected rms noise for HCG31: 0.000611336579682 Jy/beam
2020-04-09 10:16:29 | INFO | Completed making noise estimation.
2020-04-09 10:16:29 | INFO | Starting generation of moment map(s).
2020-04-09 10:16:29 | INFO | Executing command: immoments(imagename='images/HCG31.image.J2000',includepix=[0.00183400973905,1834.00973905],chans='',outfile='moments/HCG31.mom0')
2020-04-09 10:16:35 | INFO | Executing command: exportfits(imagename='moments/HCG31.mom0', fitsimage='moments/HCG31.mom0.fits',overwrite=True,dropstokes=True,stokeslast=True,history=True,dropdeg=True)
2020-04-09 10:16:35 | INFO | Completed generation of moment map(s).
